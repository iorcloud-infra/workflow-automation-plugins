# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: build-and-publish-python-client

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Sync Dependencies with UV
      run: |
        uv sync --all-packages
    - name: Generate OpenAPI Spec
      run: |
        uv run main.py main:app --app-dir packages/workflow-runner-sentence-transformers --out ./workflow-runner-sentence-transformers.json
        uv run openapi-python-client generate --path workflow-runner-sentence-transformers.json
    - name: Publish to PyPI
      run: |
        cd ./workflow-runner-sentence-transformers-client
        uv build
#        twine upload dist/*
    - name: Upload distributions
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: workflow-runner-sentence-transformers-client/dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine
      - name: Publish release distributions
        env:
          TWINE_USERNAME: __token__  # Use the token authentication
          TWINE_PASSWORD: ${{ secrets.PYPI_PUB_TOKEN }}
        run: |
          twine upload dist/*

#      - name: Publish release distributions to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          packages-dir: dist/